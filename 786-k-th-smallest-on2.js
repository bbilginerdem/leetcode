let kthSmallestPrimeFraction = function (arr, k) {
  let arrNew = {}

  for (let i = 0; i < arr.length - 1; i++) {
    for (let j = i + 1; j < arr.length; j++) {
      arrNew[arr[i] + "," + arr[j]] = arr[i] / arr[j]
    }
  }

  let sortable = []
  for (let i in arrNew) {
    sortable.push([i, arrNew[i]])
  }
  sortable.sort((a, b) => a[1] - b[1])

  let sortedArr = {}
  for (let pair of sortable) {
    sortedArr[pair[0]] = pair[1]
  }
  let string = Object.entries(sortedArr)[k - 1][0].split(",")

  let numberArray = []
  for (let i = 0; i < string.length; i++) {
    numberArray.push(parseInt(string[i]))
  }

  return numberArray
}

console.log(kthSmallestPrimeFraction([1, 2, 3, 5], 3))
// console.log(kthSmallestPrimeFraction([1, 13, 17, 59]))
// console.log(kthSmallestPrimeFraction([1, 7, 23, 29, 47]))
// console.log(
//   kthSmallestPrimeFraction([
//     1, 3, 67, 97, 173, 263, 307, 383, 479, 797, 823, 827, 853, 1039, 1063, 1291,
//     1543, 1669, 1901, 1987, 2017, 2029, 2063, 2089, 2351, 2381, 2459, 2531,
//     2539, 2647, 2801, 2851, 3067, 3221, 3257, 3499, 3761, 3833, 3853, 3863,
//     3923, 4021, 4157, 4231, 4349, 4451, 4567, 4583, 4729, 4969, 5077, 5147,
//     5441, 5591, 5827, 5897, 6043, 6079, 6257, 6301, 6361, 6473, 6653, 6737,
//     6791, 6803, 6949, 7369, 7481, 7499, 7643, 7829, 7949, 8311, 8539, 8831,
//     8969, 9181, 9337, 9749, 9851, 9887, 10069, 10141, 10271, 10781, 10831,
//     11059, 11113, 11239, 11279, 11411, 11489, 11549, 11621, 11953, 12041, 12377,
//     12421, 12497, 12763, 12823, 12953, 12973, 13147, 13679, 13997, 14011, 14029,
//     14051, 14489, 14593, 14621, 15199, 15391, 15559, 15607, 15641, 15649, 15749,
//     16067, 16073, 16831, 17327, 17449, 17627, 17921, 18047, 18149, 18257, 18289,
//     18367, 18539, 18743, 18839, 19433, 19483, 19541, 19813, 19861, 20047, 20233,
//     20533, 20753, 21179, 21401, 21517, 21611, 21863, 22039, 22157, 22727, 22739,
//     22861, 23021, 23159, 23173, 23297, 23447, 23669, 23671, 23801, 23831, 23857,
//     23893, 23981, 23993, 24071, 24247, 24533, 24547, 24709, 25031, 25033, 25117,
//     25261, 25321, 25453, 25469, 25903, 26227, 26297, 26713, 27277, 27431, 27941,
//     28351, 28687, 28697, 28859, 28901, 28933, 29129, 29147, 29207, 29209, 29401,
//     29587, 29741, 29881,
//   ])
// )
// console.log(findLongestConsecutiveSubsequence([1]))
